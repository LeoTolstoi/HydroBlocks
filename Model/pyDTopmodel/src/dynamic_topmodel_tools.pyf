!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module dynamic_topmodel_tools ! in 
    interface  ! in :dynamic_topmodel_tools
        subroutine update(recharge,storage,qout,qin,recharge1,storage1,qout1,qin1,area,dx,dt,celerity,celerity1,wvalues,wcolumns,wrowindex,qin_outlet,area_outlet,nthreads,nhsu,nvalues,nhru_outlet) ! in :dynamic_topmodel_tools:dynamic_topmodel_tools.f90
            use omp_lib
            real*4 dimension(nhsu),intent(inout) :: recharge
            real*4 dimension(nhsu),intent(inout),depend(nhsu) :: storage
            real*4 dimension(nhsu),intent(inout),depend(nhsu) :: qout
            real*4 dimension(nhsu),intent(inout),depend(nhsu) :: qin
            real*4 dimension(nhsu),intent(inout),depend(nhsu) :: recharge1
            real*4 dimension(nhsu),intent(inout),depend(nhsu) :: storage1
            real*4 dimension(nhsu),intent(inout),depend(nhsu) :: qout1
            real*4 dimension(nhsu),intent(inout),depend(nhsu) :: qin1
            real*4 dimension(nhsu),intent(in),depend(nhsu) :: area
            real*4 dimension(nhsu),intent(in),depend(nhsu) :: dx
            real*8 intent(in) :: dt
            real*4 dimension(nhsu),intent(in),depend(nhsu) :: celerity
            real*4 dimension(nhsu),intent(in),depend(nhsu) :: celerity1
            real*4 dimension(nvalues),intent(in) :: wvalues
            integer*4 dimension(nvalues),intent(in),depend(nvalues) :: wcolumns
            integer*4 dimension(nhsu + 1),intent(in),depend(nhsu) :: wrowindex
            real*4 dimension(nhru_outlet),intent(inout) :: qin_outlet
            real*4 dimension(nhru_outlet),intent(in),depend(nhru_outlet) :: area_outlet
            integer intent(in) :: nthreads
            integer, optional,check(len(recharge)>=nhsu),depend(recharge) :: nhsu=len(recharge)
            integer, optional,check(len(wvalues)>=nvalues),depend(wvalues) :: nvalues=len(wvalues)
            integer, optional,check(len(qin_outlet)>=nhru_outlet),depend(qin_outlet) :: nhru_outlet=len(qin_outlet)
        end subroutine update
        subroutine solve_kinematic_wave(nhsu,nvalues,storage,qout,qin,recharge,storage1,qout1,qin1,recharge1,area,dx,dtt,celerity,celerity1,wvalues,wcolumns,wrowindex,area_outlet,qin_outlet,nhru_outlet) ! in :dynamic_topmodel_tools:dynamic_topmodel_tools.f90
            integer, optional,intent(in),check(len(storage)>=nhsu),depend(storage) :: nhsu=len(storage)
            integer, optional,intent(in),check(len(wvalues)>=nvalues),depend(wvalues) :: nvalues=len(wvalues)
            real*4 dimension(nhsu),intent(inout) :: storage
            real*4 dimension(nhsu),intent(inout),depend(nhsu) :: qout
            real*4 dimension(nhsu),intent(inout),depend(nhsu) :: qin
            real*4 dimension(nhsu),intent(inout),depend(nhsu) :: recharge
            real*4 dimension(nhsu),intent(inout),depend(nhsu) :: storage1
            real*4 dimension(nhsu),intent(inout),depend(nhsu) :: qout1
            real*4 dimension(nhsu),intent(inout),depend(nhsu) :: qin1
            real*4 dimension(nhsu),intent(inout),depend(nhsu) :: recharge1
            real*4 dimension(nhsu),intent(in),depend(nhsu) :: area
            real*4 dimension(nhsu),intent(in),depend(nhsu) :: dx
            real*4 intent(in) :: dtt
            real*4 dimension(nhsu),intent(in),depend(nhsu) :: celerity
            real*4 dimension(nhsu),intent(in),depend(nhsu) :: celerity1
            real*4 dimension(nvalues),intent(in) :: wvalues
            integer*4 dimension(nvalues),intent(in),depend(nvalues) :: wcolumns
            integer*4 dimension(nhsu + 1),intent(in),depend(nhsu) :: wrowindex
            real*4 dimension(nhru_outlet),intent(in) :: area_outlet
            real*4 dimension(nhru_outlet),intent(inout),depend(nhru_outlet) :: qin_outlet
            integer, optional,intent(in),check(len(area_outlet)>=nhru_outlet),depend(area_outlet) :: nhru_outlet=len(area_outlet)
        end subroutine solve_kinematic_wave
    end interface 
end python module dynamic_topmodel_tools

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
